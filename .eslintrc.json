{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "eslint-plugin-import-helpers", "react"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": "./tsconfig.json"
      }
    }
  ],
  "rules": {
    "import/prefer-default-export": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "": "never", // resolve ../[folder]/index.ts
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-unresolved": "off",
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": ["module", "/^@//", ["parent", "sibling", "index"]],
        "alphabetize": {
          "order": "asc",
          "ignoreCase": true
        }
      }
    ],
    "@typescript-eslint/unbound-method": "off",
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".ts", ".tsx"]
      }
    ],
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-use-before-define": ["error"],
    "@typescript-eslint/no-shadow": ["error"],
    // DISABLE to ignore warning when refetch method from RTK-query
    // is passed to any function
    "@typescript-eslint/no-misused-promises": "off",
    // NEED further discussion
    // DISABLE to ignore warning on prop that implemented interface model
    // manually creating variable still needed to use camelCase
    "camelcase": "off",
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "semi": ["error", "never"]
  }
}
